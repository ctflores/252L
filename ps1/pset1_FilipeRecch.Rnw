\documentclass[letterpaper,12pt]{article}
\usepackage{amsmath,epsfig,setspace,multirow,url,fancyhdr}
\usepackage{enumitem}
\usepackage{arabtex}
\usepackage{rotating}
% === graphic packages ===
\usepackage{graphicx,textcomp}
% === bibliography package ===
\usepackage{natbib}
% === margin and formatting ===
\usepackage{vmargin}
\setpapersize{USletter}
\topmargin=0in
\usepackage{color}
\usepackage{amssymb}
\usepackage[all]{xy}
\usepackage{lscape}
\usepackage{tikz}
\usetikzlibrary{arrows}
\numberwithin{equation}{section}
% === dcolumn package ===
\usepackage{dcolumn}
\newcolumntype{.}{D{.}{.}{-1}}
\newcolumntype{d}[1]{D{.}{.}{#1}}
% === additional packages ===
\usepackage{color,setspace}
\definecolor{spot}{rgb}{0.6,0,0}
\usepackage{latexsym,bm,subfigure,breqn,pdflscape,float,enumitem,xcolor,booktabs,etex}
\usepackage[hidelinks]{hyperref}
\usepackage{lineno}

\linenumbers

\title{252L - Problem Set 1}
\author{Klint Kanopka}
\date{\today}

\begin{document}
\maketitle

<<message=F, warning=FALSE, echo=FALSE>>=
library(stargazer)
library(ggplot2)
library(RColorBrewer)
library(glmnet)

@

\section{Exploration of collections of bernoulli variables}

Q. Compute all the correlations of the columns of this matrix (x1). What do you notice?

<<>>=

set.seed(12311)
x1<-matrix(rbinom(1000,1,.5),100,10)

cor(x1)

@

Q. Compute the row sums. What is the variation in row sums?

<<>>=
var(rowSums(x1))
@

Q. If you considered the 1s/0s correct and incorrect responses to test items (where the rows are people and the columns are items), does this seem like it could have come from a realistic scenario?

Feel free to ignore this bit. I'm going to generate a new set of data. 

<<echo=FALSE, warning=FALSE,message=FALSE>>=
set.seed(12311)
th<-matrix(rnorm(100),100,10,byrow=FALSE)
diff<-matrix<-matrix(rnorm(10),100,10,byrow=TRUE)
kern<- exp(th - diff)
pr<-kern/(1+kern)
test<-matrix(runif(1000),100,10)
x2<-ifelse(pr>test,1,0)

@

Q. Now go back through the above questions and see what you make of this new matrix x2. Specifically, how does it compare to the first matrix x1 in terms of whether it seems like a realistic set of item responses? What characteristics (feel free to explore other features of the data) influence your opinion on this point?

<<>>=
var(rowSums(x2))
@

\section{Question 2}

(A) How would you compare the association between y1/y2 \& x? (B) How would you interpret the regression coefficients from (say) m1? (C) Do m1 and m2 show equivalent model fit? Can you notice anything peculiar about either y1 or y2 (in terms of their association with x)?

<<>>=

load("ps1-logreg.Rdata")

m1 <- glm(y1~x,df,family="binomial")
m2 <- glm(y2~x,df,family="binomial")

@
<<echo=FALSE, results="asis">>=
stargazer(m1,m2, header = FALSE)
@

\section{Likelihood exploration}

Suppose we just observed x, a bunch of random numbers.
We first want to see what the distribution looks like. We can do this:

<<>>=
x<-rnorm(100)
hist(x)
@

Looks vaguely normalish, no? [Of course, you can see that I'm drawing variates from the normal distribution, so this isn't surprising. Pretend you didn't see that part!] So what if we wanted to estimate the mean and var of the normal distribution that may have generated this set of draws.

How do we do this? The key statistical technique is to consider the likelihood.
Let's start by writing a function that computes the likelihood for "x" in a normal with unknown mean and var (collectively, "pars").

<<>>=

likelihood<-function(pars,x) { #see the first eqn here, http://mathworld.wolfram.com/NormalDistribution.html
    tmp<-exp(-(x-pars[1])^2/(2*pars[2]))
    tmp/sqrt(2*pars[2]*pi)
}

@

To completely evaluate this function, we would need to know x and pars. We only know x (this is the problem of estimation in general: what are the values in pars?).
With known x, we can think of the likelihood as the "probability" of observing the draws x from a normal distribution with parameters pars.
That is, we are thinking of the likelihood as a function of pars (x is known).

Let's think about what we get if the mean is unknown and the SD=1
Q. what do you notice? 

<<>>=
out<-list()
for (m in seq(-1,1,length.out=100)) {
    like<-rep(NA,length(x))
    for (i in 1:length(x)) {
        like[i]<-likelihood(c(m,1),x[i])
    }
    c(c(m,prod(like)))->out[[as.character(m) ]]
}
plot(do.call("rbind",out),type="b") #this is a likelihood surface where we're seeing the likelihood as a function of the unknown mean

@


From a computational perspective, working with the products of small numbers is very unstable. So we instead work with the sum of the logs.
Why is this ok? First of all, $log(xy)=log(x) + log(y)$
Second, log(f(x)) is a monotic transformation of f(x). So if we maximize log(f(x)) funtion, then we've also maximized f(x)
Below is a function that will do this.

Q. How do our estimates vary in accuracy as a function of the sample size (change 100 to something much bigger and much smaller in the top line)

<<>>=

ll<-function(pars,x) {
    likelihood<-function(pars,x) {
        tmp<-exp(-(x-pars[1])^2/(2*pars[2]))
        tmp/sqrt(2*pars[2]*pi)
    }
    like<-rep(NA,length(x))
    for (i in 1:length(x)) {
        like[i]<-likelihood(pars,x[i])
    }
    -1*sum(log(like))
}
optim(par=c(-2,2),ll,x=x)$par #these are the mean and variance estimates produced by maximum likelihood.

@


\section{Item Quality}

Consider the item statistics (p-values \& item-total correlations) discussed in the Crocker \& Algina text. What do you think? As a point of contrast, consider them vis-a-vis the item statistics generated by this data:

<<>>=
emp_rash <- read.table("emp-rasch.txt")
rasch <- read.table("rasch.txt")
@


\section{Buffon's Needle Problem}

\end{document}